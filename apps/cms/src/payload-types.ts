/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    tenants: Tenant;
    pages: Page;
    media: Media;
    'style-multi-tenant-collection': StyleMultiTenantCollection;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    style: Style;
  };
}
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  roles: ('super-admin' | 'user')[];
  tenants?:
    | {
        tenant: string | Tenant;
        roles: ('admin' | 'user')[];
        id?: string | null;
      }[]
    | null;
  lastLoggedInTenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Tenant {
  id: string;
  name: string;
  slug: string;
  domains?:
    | {
        domain: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Page {
  id: string;
  tenantSlug?: string | null;
  title: string;
  slug?: string | null;
  tenant?: (string | null) | Tenant;
  content?:
    | (
        | {
            hide?: boolean | null;
            style?: ('default' | 'scrolling') | null;
            colourProfile?: ('profile1' | 'profile2') | null;
            mainText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            button?:
              | {
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: string | Page;
                    } | null;
                    url?: string | null;
                    label: string;
                    appearance?: ('default' | 'badge' | 'link') | null;
                    size?: ('compact' | 'default' | 'large') | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner';
          }
        | {
            hide?: boolean | null;
            style?: 'default' | null;
            colourProfile?: ('profile1' | 'profile2') | null;
            zoneOne?:
              | {
                  text: {
                    [k: string]: unknown;
                  }[];
                  stars: number;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'starReview';
                }[]
              | null;
            zoneTwo?:
              | {
                  icon?: 'Check in Circle' | null;
                  benefits?:
                    | {
                        benefit: string;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'benefitsListBlock';
                }[]
              | null;
            mainText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            secondaryText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            image?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            hide?: boolean | null;
            style?: 'default' | null;
            colourProfile?: ('profile1' | 'profile2') | null;
            tagLine?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            logos?:
              | {
                  image?: string | Media | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'logo-list';
          }
        | {
            hide?: boolean | null;
            style?: 'default' | null;
            colourProfile?: ('profile1' | 'profile2') | null;
            titleText?: string | null;
            features?:
              | {
                  title: string;
                  description: {
                    [k: string]: unknown;
                  }[];
                  icon: string | Media;
                  id?: string | null;
                }[]
              | null;
            image?: string | Media | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'features';
          }
        | {
            hide?: boolean | null;
            style?: 'default' | null;
            colourProfile?: ('profile1' | 'profile2') | null;
            testimonials?:
              | {
                  image?: string | Media | null;
                  title: {
                    [k: string]: unknown;
                  }[];
                  quote: {
                    [k: string]: unknown;
                  }[];
                  author: string;
                  stars?: number | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'testimonials';
          }
        | {
            hide?: boolean | null;
            style?: 'default' | null;
            colourProfile?: ('profile1' | 'profile2') | null;
            titleText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            products?:
              | {
                  name: string;
                  price?: number | null;
                  link?: string | null;
                  mostPopular?: boolean | null;
                  image?: string | Media | null;
                  includes?:
                    | {
                        amount?: number | null;
                        description?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'product-list';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt: string;
  caption?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  media?: string | Media | null;
  tenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface StyleMultiTenantCollection {
  id: string;
  styles?:
    | {
        slug: string;
        name: string;
        id?: string | null;
      }[]
    | null;
  tenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Style {
  id: string;
  styles?:
    | {
        slug: string;
        name: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}